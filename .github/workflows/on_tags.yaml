name: rpm+goreleaser

on:
  push:
    tags:
      - '*'
      
permissions:
  contents: write

jobs:

  rpmbuilder:
        name: Create RPM Release (using ubuntu, what a strange way to build RPM)
        runs-on: ubuntu-latest

        steps:

        - name: Checkout code
          uses: actions/checkout@master

        - name: Replace version in RPM spec so correct source is downloaded when building RPM
          run: sed -Ei 's/(^Version:[[:space:]]*).*/\1${{github.ref_name}}/' scripts/viriumd.spec

        - name: build RPM package
          id: rpm_build
          uses: naveenrajm7/rpmbuild@master
          with:
              spec_file: "scripts/viriumd.spec"
            
        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ${{ steps.rpm_build.outputs.source_rpm_path }}
            asset_name: ${{ steps.rpm_build.outputs.source_rpm_name }}
            asset_content_type: ${{ steps.rpm_build.outputs.rpm_content_type }}
# **************************************************************************************************************
#       Goreleaser 
# **************************************************************************************************************
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up Go
          uses: actions/setup-go@v5

        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: '~> v2'
            args: release --clean
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

